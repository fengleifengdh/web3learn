{
	"id": "90b4e11ab75397059d2b56476f9d3826",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/11loop.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\ncontract Loop {\n    function loop() public pure returns (uint) {\n        // for loop\n        uint name;\n        for (uint i = 0; i < 10; i++) {\n            if (i == 3) {\n                // Skip to next iteration with continue\n                continue;\n            }\n            if (i == 5) {\n                // Exit loop with break\n                break;\n            }else{\n                name=i;\n            }\n        }\n        return  name;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/11loop.sol": {
				"Loop": {
					"abi": [
						{
							"inputs": [],
							"name": "loop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/11loop.sol\":58:509  contract Loop {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/11loop.sol\":58:509  contract Loop {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa92100cb\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/11loop.sol\":78:507  function loop() public pure returns (uint) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/11loop.sol\":115:119  uint */\n      0x00\n        /* \"contracts/11loop.sol\":151:160  uint name */\n      dup1\n        /* \"contracts/11loop.sol\":175:181  uint i */\n      0x00\n        /* \"contracts/11loop.sol\":170:479  for (uint i = 0; i < 10; i++) {... */\n    tag_9:\n        /* \"contracts/11loop.sol\":191:193  10 */\n      0x0a\n        /* \"contracts/11loop.sol\":187:188  i */\n      dup2\n        /* \"contracts/11loop.sol\":187:193  i < 10 */\n      lt\n        /* \"contracts/11loop.sol\":170:479  for (uint i = 0; i < 10; i++) {... */\n      iszero\n      tag_10\n      jumpi\n        /* \"contracts/11loop.sol\":223:224  3 */\n      0x03\n        /* \"contracts/11loop.sol\":218:219  i */\n      dup2\n        /* \"contracts/11loop.sol\":218:224  i == 3 */\n      sub\n        /* \"contracts/11loop.sol\":214:323  if (i == 3) {... */\n      iszero\n        /* \"contracts/11loop.sol\":300:308  continue */\n      tag_11\n        /* \"contracts/11loop.sol\":214:323  if (i == 3) {... */\n      jumpi\n        /* \"contracts/11loop.sol\":345:346  5 */\n      0x05\n        /* \"contracts/11loop.sol\":340:341  i */\n      dup2\n        /* \"contracts/11loop.sol\":340:346  i == 5 */\n      sub\n        /* \"contracts/11loop.sol\":336:469  if (i == 5) {... */\n      iszero\n        /* \"contracts/11loop.sol\":406:411  break */\n      tag_10\n        /* \"contracts/11loop.sol\":336:469  if (i == 5) {... */\n      jumpi\n        /* \"contracts/11loop.sol\":453:454  i */\n      dup1\n        /* \"contracts/11loop.sol\":448:454  name=i */\n      swap2\n      pop\n        /* \"contracts/11loop.sol\":170:479  for (uint i = 0; i < 10; i++) {... */\n    tag_11:\n        /* \"contracts/11loop.sol\":195:198  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/11loop.sol\":170:479  for (uint i = 0; i < 10; i++) {... */\n      jump(tag_9)\n    tag_10:\n      pop\n        /* \"contracts/11loop.sol\":496:500  name */\n      dup1\n        /* \"contracts/11loop.sol\":488:500  return  name */\n      swap2\n      pop\n      pop\n        /* \"contracts/11loop.sol\":78:507  function loop() public pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_15:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_16:\n        /* \"#utility.yul\":177:201   */\n      tag_20\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_15\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_7:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_22\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_16\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f97190febccda49f445e7c849c07fe140894d7852798415f077200428d2e562a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060db80601a5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c8063a92100cb14602a575b5f80fd5b60306044565b604051603b9190608e565b60405180910390f35b5f805f5b600a811015607057600381031560645760058103156070578091505b80806001019150506048565b508091505090565b5f819050919050565b6088816078565b82525050565b5f602082019050609f5f8301846081565b9291505056fea2646970667358221220f97190febccda49f445e7c849c07fe140894d7852798415f077200428d2e562a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xDB DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA92100CB EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0x8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH1 0x70 JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH1 0x64 JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH1 0x70 JUMPI DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0x48 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x88 DUP2 PUSH1 0x78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x9F PUSH0 DUP4 ADD DUP5 PUSH1 0x81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 PUSH18 0x90FEBCCDA49F445E7C849C07FE140894D785 0x27 SWAP9 COINBASE PUSH0 SMOD PUSH19 0x428D2E562A64736F6C634300081A00330000 ",
							"sourceMap": "58:451:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@loop_41": {
									"entryPoint": 68,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:439:1",
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c8063a92100cb14602a575b5f80fd5b60306044565b604051603b9190608e565b60405180910390f35b5f805f5b600a811015607057600381031560645760058103156070578091505b80806001019150506048565b508091505090565b5f819050919050565b6088816078565b82525050565b5f602082019050609f5f8301846081565b9291505056fea2646970667358221220f97190febccda49f445e7c849c07fe140894d7852798415f077200428d2e562a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA92100CB EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0x8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH1 0x70 JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH1 0x64 JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH1 0x70 JUMPI DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0x48 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x88 DUP2 PUSH1 0x78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x9F PUSH0 DUP4 ADD DUP5 PUSH1 0x81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 PUSH18 0x90FEBCCDA49F445E7C849C07FE140894D785 0x27 SWAP9 COINBASE PUSH0 SMOD PUSH19 0x428D2E562A64736F6C634300081A00330000 ",
							"sourceMap": "58:451:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;78:429;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;115:4;151:9;175:6;170:309;191:2;187:1;:6;170:309;;;223:1;218;:6;214:109;300:8;214:109;345:1;340;:6;336:133;406:5;336:133;453:1;448:6;;170:309;195:3;;;;;;;170:309;;;;496:4;488:12;;;78:429;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "43800",
								"executionCost": "91",
								"totalCost": "43891"
							},
							"external": {
								"loop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 509,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 509,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 509,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 509,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 509,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 509,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 509,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 509,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 509,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 509,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 509,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 509,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 509,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 509,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 509,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 509,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 509,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 509,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f97190febccda49f445e7c849c07fe140894d7852798415f077200428d2e562a64736f6c634300081a0033",
									".code": [
										{
											"begin": 58,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 509,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 509,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 509,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "A92100CB"
										},
										{
											"begin": 58,
											"end": 509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 78,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 78,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 78,
											"end": 507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 78,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 78,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 78,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 115,
											"end": 119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 151,
											"end": 160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 170,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 187,
											"end": 188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 193,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 170,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 223,
											"end": 224,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 218,
											"end": 219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 218,
											"end": 224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 214,
											"end": 323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 300,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 214,
											"end": 323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 340,
											"end": 346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 336,
											"end": 469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 406,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 336,
											"end": 469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 453,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 170,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 195,
											"end": 198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 198,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 195,
											"end": 198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 195,
											"end": 198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 195,
											"end": 198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 170,
											"end": 479,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 488,
											"end": 500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 488,
											"end": 500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 488,
											"end": 500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/11loop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"loop()": "a92100cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"loop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/11loop.sol\":\"Loop\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/11loop.sol\":{\"keccak256\":\"0x455ff43388a7121244f73d67470f0e9c9e742e5249e4e553f0553aea6b981876\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60a4453a289f4e991e3d9cc4f95c93d58d57bc9f322179a5bc03bb2594a0b6c7\",\"dweb:/ipfs/QmNhpo1WUCEVcw4sB7gXKSqoeKBV83ML8SaHsKHbUGj9Kq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/11loop.sol": {
				"ast": {
					"absolutePath": "contracts/11loop.sol",
					"exportedSymbols": {
						"Loop": [
							42
						]
					},
					"id": 43,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Loop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "Loop",
							"nameLocation": "67:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "121:386:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"mutability": "mutable",
														"name": "name",
														"nameLocation": "156:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 40,
														"src": "151:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 6,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "151:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 8,
												"nodeType": "VariableDeclarationStatement",
												"src": "151:9:0"
											},
											{
												"body": {
													"id": 36,
													"nodeType": "Block",
													"src": "200:279:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 19,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "218:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "223:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "218:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 24,
															"nodeType": "IfStatement",
															"src": "214:109:0",
															"trueBody": {
																"id": 23,
																"nodeType": "Block",
																"src": "226:97:0",
																"statements": [
																	{
																		"id": 22,
																		"nodeType": "Continue",
																		"src": "300:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 25,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "340:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 26,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "345:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "340:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 34,
																"nodeType": "Block",
																"src": "430:39:0",
																"statements": [
																	{
																		"expression": {
																			"id": 32,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 30,
																				"name": "name",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 7,
																				"src": "448:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 31,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "453:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "448:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 33,
																		"nodeType": "ExpressionStatement",
																		"src": "448:6:0"
																	}
																]
															},
															"id": 35,
															"nodeType": "IfStatement",
															"src": "336:133:0",
															"trueBody": {
																"id": 29,
																"nodeType": "Block",
																"src": "348:78:0",
																"statements": [
																	{
																		"id": 28,
																		"nodeType": "Break",
																		"src": "406:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 13,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "187:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "191:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "187:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 37,
												"initializationExpression": {
													"assignments": [
														10
													],
													"declarations": [
														{
															"constant": false,
															"id": 10,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "180:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 37,
															"src": "175:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 9,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "175:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 12,
													"initialValue": {
														"hexValue": "30",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "175:10:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "195:3:0",
														"subExpression": {
															"id": 16,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "195:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 18,
													"nodeType": "ExpressionStatement",
													"src": "195:3:0"
												},
												"nodeType": "ForStatement",
												"src": "170:309:0"
											},
											{
												"expression": {
													"id": 38,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "496:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5,
												"id": 39,
												"nodeType": "Return",
												"src": "488:12:0"
											}
										]
									},
									"functionSelector": "a92100cb",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loop",
									"nameLocation": "87:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "91:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "115:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "115:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:6:0"
									},
									"scope": 42,
									"src": "78:429:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 43,
							"src": "58:451:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:477:0"
				},
				"id": 0
			}
		}
	}
}